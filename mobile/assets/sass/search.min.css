/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-orange-200: oklch(90.1% 0.076 70.697);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-orange-600: oklch(64.6% 0.222 41.116);
    --color-orange-800: oklch(47% 0.157 37.304);
    --color-orange-950: oklch(26.6% 0.079 36.259);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-lg: 64rem;
    --container-2xs: 18rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --blur-md: 12px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary: #FF3300;
    --color-secondary: #FF6600;
    --font-inter: "Inter", sans-serif;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .visible\! {
    visibility: visible !important;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-14 {
    height: calc(var(--spacing) * 14);
  }
  .h-full {
    height: 100%;
  }
  .w-full {
    width: 100%;
  }
  .max-w-screen-lg {
    max-width: var(--breakpoint-lg);
  }
  .flex-1 {
    flex: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-y-4 {
    --tw-translate-y: calc(var(--spacing) * -4);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-\[var\(--instream-color-text\)\] {
    border-color: var(--instream-color-text);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-primary {
    border-color: var(--color-primary);
  }
  .border-t-primary {
    border-top-color: var(--color-primary);
  }
  .bg-\[\#F6F8FF\] {
    background-color: #F6F8FF;
  }
  .bg-\[\#FFF0E6\] {
    background-color: #FFF0E6;
  }
  .bg-\[\#FFFBF7\] {
    background-color: #FFFBF7;
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-black\/60 {
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .bg-black\/70 {
    background-color: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-neutral-950 {
    background-color: var(--color-neutral-950);
  }
  .bg-neutral-950\/60 {
    background-color: color-mix(in srgb, oklch(14.5% 0 0) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-950) 60%, transparent);
    }
  }
  .bg-orange-500 {
    background-color: var(--color-orange-500);
  }
  .bg-primary {
    background-color: var(--color-primary);
  }
  .bg-primary\/2 {
    background-color: color-mix(in srgb, #FF3300 2%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-primary) 2%, transparent);
    }
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-slate-100 {
    background-color: var(--color-slate-100);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .from-\[\#FFE2CC\] {
    --tw-gradient-from: #FFE2CC;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black {
    --tw-gradient-from: var(--color-black);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-black\/70 {
    --tw-gradient-from: color-mix(in srgb, #000 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 70%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-primary {
    --tw-gradient-from: var(--color-primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-\[\#FF9342\] {
    --tw-gradient-to: #FF9342;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-secondary {
    --tw-gradient-to: var(--color-secondary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .fill-slate-300 {
    fill: var(--color-slate-300);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-px {
    padding: 1px;
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[13px\] {
    font-size: 13px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-\[\#0300C4\] {
    color: #0300C4;
  }
  .text-\[var\(--instream-color-text\)\] {
    color: var(--instream-color-text);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-orange-600 {
    color: var(--color-orange-600);
  }
  .text-primary {
    color: var(--color-primary);
  }
  .text-slate-400 {
    color: var(--color-slate-400);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-0 {
    outline-style: var(--tw-outline-style);
    outline-width: 0px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .\*\:\*\:bg-neutral-100\! {
    :is(& > *) {
      :is(& > *) {
        background-color: var(--color-neutral-100) !important;
      }
    }
  }
  .group-has-checked\:bg-primary {
    &:is(:where(.group):has(*:checked) *) {
      background-color: var(--color-primary);
    }
  }
  .group-has-checked\:text-white {
    &:is(:where(.group):has(*:checked) *) {
      color: var(--color-white);
    }
  }
  .group-\[\.--begin\]\/smartsearch\:flex\! {
    &:is(:where(.group\/smartsearch):is(.--begin) *) {
      display: flex !important;
    }
  }
  .group-\[\.--begin\]\/smartsearch\:hidden {
    &:is(:where(.group\/smartsearch):is(.--begin) *) {
      display: none;
    }
  }
  .group-\[\.--focus\]\/searchform\:pointer-events-auto {
    &:is(:where(.group\/searchform):is(.--focus) *) {
      pointer-events: auto;
    }
  }
  .group-\[\.--focus\]\/searchform\:translate-y-0 {
    &:is(:where(.group\/searchform):is(.--focus) *) {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .group-\[\.--focus\]\/searchform\:opacity-100 {
    &:is(:where(.group\/searchform):is(.--focus) *) {
      opacity: 100%;
    }
  }
  .group-\[\.--searching\]\/smartsearch\:block\! {
    &:is(:where(.group\/smartsearch):is(.--searching) *) {
      display: block !important;
    }
  }
  .group-\[\.--searching\]\/smartsearch\:hidden {
    &:is(:where(.group\/smartsearch):is(.--searching) *) {
      display: none;
    }
  }
  .group-\[\.--typing\]\/searchform\:block\! {
    &:is(:where(.group\/searchform):is(.--typing) *) {
      display: block !important;
    }
  }
  .placeholder\:text-neutral-500 {
    &::placeholder {
      color: var(--color-neutral-500);
    }
  }
  .before\:bg-primary {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-primary);
    }
  }
  .before\:bg-white {
    &::before {
      content: var(--tw-content);
      background-color: var(--color-white);
    }
  }
  .before\:from-\[\#F6F8FF\] {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: #F6F8FF;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:from-\[\#FFFBF7\] {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: #FFFBF7;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:from-primary {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: var(--color-primary);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:to-secondary {
    &::before {
      content: var(--tw-content);
      --tw-gradient-to: var(--color-secondary);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:bg-white\/20 {
    &::after {
      content: var(--tw-content);
      background-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .after\:from-\[\#F6F8FF\] {
    &::after {
      content: var(--tw-content);
      --tw-gradient-from: #F6F8FF;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .after\:from-\[\#FFFBF7\] {
    &::after {
      content: var(--tw-content);
      --tw-gradient-from: #FFFBF7;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .\*\:after\:bg-slate-400 {
    :is(& > *) {
      &::after {
        content: var(--tw-content);
        background-color: var(--color-slate-400);
      }
    }
  }
  .hover\:bg-neutral-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .hover\:bg-primary {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--color-primary);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .\*\:\*\:hover\:bg-neutral-100 {
    :is(& > *) {
      :is(& > *) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-neutral-100);
          }
        }
      }
    }
  }
  .\*\:\*\:hover\:text-primary {
    :is(& > *) {
      :is(& > *) {
        &:hover {
          @media (hover: hover) {
            color: var(--color-primary);
          }
        }
      }
    }
  }
  .lg\:mb-10 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 10);
    }
  }
  .lg\:gap-10 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 10);
    }
  }
  .lg\:bg-neutral-950 {
    @media (width >= 64rem) {
      background-color: var(--color-neutral-950);
    }
  }
  .lg\:text-white {
    @media (width >= 64rem) {
      color: var(--color-white);
    }
  }
  .lg\:hover\:bg-neutral-700 {
    @media (width >= 64rem) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:border-gray-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:border-neutral-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-white\/20 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }
  .dark\:bg-black {
    &:where(.dark, .dark *) {
      background-color: var(--color-black);
    }
  }
  .dark\:bg-blue-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-950);
    }
  }
  .dark\:bg-orange-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-orange-800);
    }
  }
  .dark\:bg-orange-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-orange-950);
    }
  }
  .dark\:bg-slate-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-slate-700);
    }
  }
  .dark\:bg-white\/15 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, #fff 15%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-white) 15%, transparent);
      }
    }
  }
  .dark\:bg-zinc-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-900);
    }
  }
  .dark\:text-black {
    &:where(.dark, .dark *) {
      color: var(--color-black);
    }
  }
  .dark\:text-blue-300 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:shadow-white\/20 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, #fff 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-white) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:placeholder\:text-white {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: var(--color-white);
      }
    }
  }
  .dark\:before\:from-blue-950 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        --tw-gradient-from: var(--color-blue-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .dark\:before\:from-orange-950 {
    &:where(.dark, .dark *) {
      &::before {
        content: var(--tw-content);
        --tw-gradient-from: var(--color-orange-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .dark\:after\:from-blue-950 {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        --tw-gradient-from: var(--color-blue-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .dark\:after\:from-orange-950 {
    &:where(.dark, .dark *) {
      &::after {
        content: var(--tw-content);
        --tw-gradient-from: var(--color-orange-950);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .\*\:\*\:dark\:hover\:bg-white\/10 {
    :is(& > *) {
      :is(& > *) {
        &:where(.dark, .dark *) {
          &:hover {
            @media (hover: hover) {
              background-color: color-mix(in srgb, #fff 10%, transparent);
              @supports (color: color-mix(in lab, red, red)) {
                background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
              }
            }
          }
        }
      }
    }
  }
  .lg\:dark\:bg-white\/10 {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        background-color: color-mix(in srgb, #fff 10%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
        }
      }
    }
  }
  .lg\:dark\:text-white {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        color: var(--color-white);
      }
    }
  }
  .lg\:dark\:hover\:bg-white\/20 {
    @media (width >= 64rem) {
      &:where(.dark, .dark *) {
        &:hover {
          @media (hover: hover) {
            background-color: color-mix(in srgb, #fff 20%, transparent);
            @supports (color: color-mix(in lab, red, red)) {
              background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
            }
          }
        }
      }
    }
  }
}
@layer components {
  .container {
    margin-inline: auto;
    max-width: var(--breakpoint-lg);
    padding-inline: calc(var(--spacing) * 4);
  }
  .section__title {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
}
.smartsearch {
  margin-inline: auto;
  display: flex;
  max-width: var(--breakpoint-sm);
  flex-direction: column;
  justify-content: center;
  padding-inline: calc(var(--spacing) * 4);
  padding-bottom: calc(var(--spacing) * 16);
}
.smartsearch-logo {
  margin-bottom: calc(var(--spacing) * 12);
  display: flex;
  justify-content: center;
}
.smartsearch-form {
  margin-top: calc(var(--spacing) * 12);
}
.smartsearch-form-group {
  position: relative;
  margin-bottom: calc(var(--spacing) * 4);
  display: flex;
  height: calc(var(--spacing) * 14);
  align-items: center;
  justify-content: space-between;
  gap: calc(var(--spacing) * 2);
  border-radius: var(--radius-xl);
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.smartsearch-form-group-input {
  height: 100%;
  flex: 1;
  padding-left: calc(var(--spacing) * 4);
  outline-style: var(--tw-outline-style);
  outline-width: 0px;
}
.smartsearch-form-group-remove {
  display: none;
  flex-shrink: 0;
}
.smartsearch-form-group-submit {
  height: 100%;
  flex-shrink: 0;
  padding-right: calc(var(--spacing) * 4);
  padding-left: calc(var(--spacing) * 2);
}
.smartsearch-form-disclaimer {
  margin-bottom: calc(var(--spacing) * 6);
}
.smartsearch-form-disclaimer-title {
  visibility: visible !important;
  margin-bottom: calc(var(--spacing) * 1.5);
  display: none;
  align-items: center;
  gap: calc(var(--spacing) * 2);
  --tw-font-weight: var(--font-weight-bold);
  font-weight: var(--font-weight-bold);
}
.smartsearch-form-disclaimer-text {
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}
.smartsearch-form-suggest {
  position: absolute;
  inset-inline: calc(var(--spacing) * 0);
  top: 100%;
  z-index: 50;
  border-radius: var(--radius-xl);
  background-color: var(--color-white);
  padding: calc(var(--spacing) * 4);
  --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
  box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
}
.smartsearch-form-suggest-title {
  position: relative;
  margin-bottom: calc(var(--spacing) * 2);
  display: flex;
  gap: calc(var(--spacing) * 3);
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
  padding-block: calc(var(--spacing) * 2);
  &::before {
    content: var(--tw-content);
    height: calc(var(--spacing) * 5);
  }
  &::before {
    content: var(--tw-content);
    width: calc(var(--spacing) * 1);
  }
  &::before {
    content: var(--tw-content);
    border-radius: var(--radius-xs);
  }
  &::before {
    content: var(--tw-content);
    background-color: var(--color-primary);
  }
}
.smartsearch-form-suggest-item {
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: space-between;
  gap: calc(var(--spacing) * 2);
  padding-block: calc(var(--spacing) * 2);
}
.smartsearch-form-suggest-item span {
  flex: 1;
}
.smartsearch-result-summary {
  display: none;
}
.smartsearch-result-summary-swiper {
  margin-inline: calc(var(--spacing) * -4);
  padding-inline: calc(var(--spacing) * 4);
}
.smartsearch-result-summary-swiper .swiper-slide {
  width: calc(var(--spacing) * 50);
}
.smartsearch-result-summary-swiper .swiper-slide .item {
  display: block;
}
.smartsearch-result-summary-swiper .swiper-slide .item--border {
  display: block;
  border-radius: var(--radius-md);
  border-style: var(--tw-border-style);
  border-width: 1px;
  padding: calc(var(--spacing) * 4);
}
.smartsearch-result-summary-swiper .swiper-slide .item-figure {
  margin-bottom: calc(var(--spacing) * 3);
  aspect-ratio: 2/1;
  overflow: hidden;
  border-radius: var(--radius-lg);
}
.smartsearch-result-summary-swiper .swiper-slide .item-figure-img {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.smartsearch-result-summary-swiper .swiper-slide .item-title {
  margin-bottom: calc(var(--spacing) * 1);
}
.smartsearch-result-summary-swiper .swiper-slide .item-detail {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing) * 2);
  :is(& > *) {
    display: flex;
  }
  :is(& > *) {
    align-items: center;
  }
  :is(& > *) {
    gap: calc(var(--spacing) * 2);
  }
  :is(& > *) {
    &::after {
      content: var(--tw-content);
      width: calc(var(--spacing) * 1.5);
      height: calc(var(--spacing) * 1.5);
    }
  }
  :is(& > *) {
    &::after {
      content: var(--tw-content);
      border-radius: calc(infinity * 1px);
    }
  }
  :is(& > *) {
    &:last-child {
      &::after {
        content: var(--tw-content);
        display: none;
      }
    }
  }
}
.smartsearch-result-summary-swiper .swiper-button-next, .smartsearch-result-summary-swiper .swiper-button-prev {
  top: calc(var(--spacing) * 0) !important;
  margin-top: calc(var(--spacing) * 0) !important;
  height: 100% !important;
  width: calc(var(--spacing) * 12) !important;
  background-image: none !important;
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--default-transition-duration));
  &::after {
    content: var(--tw-content);
    display: none;
  }
}
.smartsearch-result-summary-swiper .swiper-button-next svg, .smartsearch-result-summary-swiper .swiper-button-prev svg {
  position: relative;
}
.smartsearch-result-summary-swiper .swiper-button-next {
  right: calc(var(--spacing) * 0) !important;
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
  &::before {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }
  &::before {
    content: var(--tw-content);
    z-index: 0;
  }
}
.smartsearch-result-summary-swiper .swiper-button-prev {
  left: calc(var(--spacing) * 0) !important;
}
.smartsearch-result-summary-swiper .swiper-button-disabled {
  opacity: 0%;
}
.smartsearch-result-summary-content {
  margin-bottom: calc(var(--spacing) * 4);
}
.smartsearch-result-summary-respons {
  margin-bottom: calc(var(--spacing) * 8);
  display: flex;
  align-items: center;
  gap: calc(var(--spacing) * 3);
}
.smartsearch-result-summary-respons-radio {
  display: flex;
  align-items: center;
  gap: calc(var(--spacing) * 1);
}
.smartsearch-result-summary-respons-radio span {
  display: flex;
  height: calc(var(--spacing) * 7);
  align-items: center;
  justify-content: center;
  gap: calc(var(--spacing) * 1);
  border-radius: calc(infinity * 1px);
  padding-inline: calc(var(--spacing) * 2);
}
.smartsearch-result-summary-respons-radio input {
  position: absolute;
  opacity: 0%;
}
.smartsearch-result-summary-respons-radio label {
  position: relative;
  display: flex;
  cursor: pointer;
  align-items: center;
  gap: calc(var(--spacing) * 1);
  color: inherit;
}
.smartsearch-result-summary-article-title {
  margin-bottom: calc(var(--spacing) * 6);
}
.smartsearch-result-summary-main {
  position: relative;
  margin-inline: calc(var(--spacing) * -4);
  margin-top: calc(var(--spacing) * 6);
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  padding-top: calc(var(--spacing) * 5);
}
.smartsearch-result-latest {
  margin-top: calc(var(--spacing) * 4);
  text-align: center;
}
.smartsearch-result-latest-title {
  margin-bottom: calc(var(--spacing) * 4);
}
.smartsearch-result-latest-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: calc(var(--spacing) * 3);
  :is(& > *) {
    :is(& > *) {
      display: block;
    }
  }
  :is(& > *) {
    :is(& > *) {
      border-radius: calc(infinity * 1px);
    }
  }
  :is(& > *) {
    :is(& > *) {
      padding-inline: calc(var(--spacing) * 3);
    }
  }
  :is(& > *) {
    :is(& > *) {
      padding-block: calc(var(--spacing) * 1);
    }
  }
}
.loading {
  margin-inline: auto;
  margin-top: calc(var(--spacing) * 8);
  margin-bottom: calc(var(--spacing) * 6);
  width: calc(var(--spacing) * 12);
  height: calc(var(--spacing) * 12);
  border-radius: calc(infinity * 1px);
  border-style: var(--tw-border-style);
  border-width: 4px;
  animation: spin 0.8s linear infinite;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
.skeleton {
  margin-inline: calc(var(--spacing) * -4);
  display: none;
  overflow: hidden;
  padding-inline: calc(var(--spacing) * 4);
}
.skeleton-box {
  background: linear-gradient(90deg, #e0e0e0 25%, #f5f5f5 50%, #e0e0e0 75%);
  background-size: 200% 100%;
  animation: shimmer 1.2s infinite;
  border-radius: 6px;
  margin-bottom: 12px;
}
.skeleton-text {
  height: 16px;
  width: 100%;
}
.skeleton-text.short {
  width: calc(10/12 * 100%);
}
.skeleton-wrapper {
  display: flex;
}
.skeleton-image {
  margin-bottom: calc(var(--spacing) * 3);
  height: calc(var(--spacing) * 25);
  width: calc(var(--spacing) * 50);
}
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}
.footer__copyright {
  background-color: transparent;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-content: "";
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
